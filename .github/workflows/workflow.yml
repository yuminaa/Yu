name: yu ci

on:
  push:
    branches: [ main, dev ]
    paths-ignore:
      - '**/coverage.info'
      - '**/coverage.xml'
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    name: ${{ matrix.os }} - ${{ matrix.arch }} - ${{ matrix.compiler }} - ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest ]
        arch: [ arm64 ]
        compiler: [ clang ]
        build_type: [ Release ]

    env:
      BUILD_TYPE: ${{ matrix.build_type }}
      CCACHE_DIR: ${{ github.workspace }}/.ccache

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Install dependencies first
      - name: Install Dependencies
        run: |
          brew update
          brew install ccache
          brew install llvm
          echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH

      - name: Cache ccache directory
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.ccache
          key: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.compiler }}-${{ matrix.build_type }}-ccache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.compiler }}-${{ matrix.build_type }}-ccache-

      - name: Create Build Directory
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Configure CMake
        working-directory: ${{ github.workspace }}/build
        run: |
          cmake .. \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_C_COMPILER=/opt/homebrew/opt/llvm/bin/clang \
            -DCMAKE_CXX_COMPILER=/opt/homebrew/opt/llvm/bin/clang++ \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install \
            -DBUILD_TESTING=ON

      - name: Build
        working-directory: ${{ github.workspace }}/build
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Run Tests
        working-directory: ${{ github.workspace }}/build
        run: |
          export GTEST_COLOR=yes
          ctest --output-on-failure -C ${{ matrix.build_type }} --verbose

      - name: Upload Test Logs
        if: always()
        uses: actions/upload-artifact@v4.4.3
        with:
          name: test-logs-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.compiler }}-${{ matrix.build_type }}
          path: |
            ${{ github.workspace }}/build/Testing/Temporary/LastTest.log
            ${{ github.workspace }}/build/tests/test_detail.xml
          retention-days: 7